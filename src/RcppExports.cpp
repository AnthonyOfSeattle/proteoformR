// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// DetectBreakpoints
IntegerVector DetectBreakpoints(NumericMatrix values, double lambda, std::string model_type);
RcppExport SEXP _proteoformR_DetectBreakpoints(SEXP valuesSEXP, SEXP lambdaSEXP, SEXP model_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< std::string >::type model_type(model_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(DetectBreakpoints(values, lambda, model_type));
    return rcpp_result_gen;
END_RCPP
}
// FitModel
NumericVector FitModel(NumericMatrix values, IntegerVector breakpoints);
RcppExport SEXP _proteoformR_FitModel(SEXP valuesSEXP, SEXP breakpointsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type breakpoints(breakpointsSEXP);
    rcpp_result_gen = Rcpp::wrap(FitModel(values, breakpoints));
    return rcpp_result_gen;
END_RCPP
}
// test_ObjectiveCalculator
int test_ObjectiveCalculator();
RcppExport SEXP _proteoformR_test_ObjectiveCalculator() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(test_ObjectiveCalculator());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_proteoformR_DetectBreakpoints", (DL_FUNC) &_proteoformR_DetectBreakpoints, 3},
    {"_proteoformR_FitModel", (DL_FUNC) &_proteoformR_FitModel, 2},
    {"_proteoformR_test_ObjectiveCalculator", (DL_FUNC) &_proteoformR_test_ObjectiveCalculator, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_proteoformR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
